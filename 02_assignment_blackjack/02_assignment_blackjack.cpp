/*
    Stephanie Boyettte
    02 assignment - Blackjack game

       - program that playes simplified version of Blackjack
       - note: not worried about face cards
       
       - generate a random number between 1-10 each time a player gets a card
       - 2 cards to start, 1 card upon request till end of game
       - player gets as many cards as they need
       - display runnung total of the player's cards
       - ask player whether or not the program should deal another card
       - alert player if "player goes bust" - goes over 21:
                    - "You are bust! The current hand is over and dealer wins"
       - alert player if they won
       - end of hand/program - play again option
*/

    #include <iostream>
    #include <cstdlib>      // library to import function use - rand() & srand()
    #include <ctime>        // library to import function use - time()
    using namespace std;

int main()
{    
    int seedTime, firstCards1st, firstCards2nd, anotherCard, totalCards;
    char userWantCard, userPlayAgain;
    
    seedTime = time(0); // returns integer representation of time from generated by the computer
                        // some codes value = x + 7 * (8%x) - 20; x++; time(0) 
                        // returns the system time in seconds since 1/1/1970
    srand(seedTime);  // used to initialise random number, sets starting point for rpoducing
                      // a series of pseudo-random ints...initializes/seeds rand()
                      
    firstCards1st = 1 + rand() % 10;
    firstCards2nd = 1 + rand() % 10;
    anotherCard = 1 + rand() % 10;
    
    
   do{
    cout << "First Cards: " << firstCards1st << ", " << firstCards2nd << endl; // rand() only returns the next
                                                                               // random number ints in squece
    totalCards = firstCards1st + firstCards2nd;
    
    cout << "Total: " << totalCards << endl;
    
    cout << "Do you want another card? (y/n): " << endl;
    cin >> userWantCard;

    
    //check for valid input for userWantCard
    while((userWantCard != 'y') && (userWantCard != 'Y') && (userWantCard != 'n') && (userWantCard != 'N')){
        cout << "OOPS! please give a valid entry of y or n: " << endl;
        cin >> userWantCard;
    }  
    
    // set total card count outside of loop for base of totalCards
    // anotherCard = 1 + rand() % 10;
    totalCards = firstCards1st + firstCards2nd + anotherCard;
    
    while((userWantCard == 'y') || (userWantCard == 'Y'))
    {
        cout << "Card: " << anotherCard << endl;
        cout << "Total: " << totalCards << endl;
        
        if(totalCards > 21){
            cout << "Bust... Dealer wins." << endl;
            userWantCard = 'n'; // exit nested while loop 
            
        }else if(totalCards < 21){
            cout << "Do you want another card? (y/n): " << endl;
            cin >> userWantCard;
    
            //check for valid input for userWantCard
            while((userWantCard != 'y') && (userWantCard != 'Y') && (userWantCard != 'n') && (userWantCard != 'N')){
                cout << "OOPS! please give a valid entry of y or n: " << endl;
                cin >> userWantCard;
            }  
            
            // grab another random value for anotherCard - ressample rand() value
            anotherCard = 1 + rand() % 10;
            totalCards = totalCards + anotherCard;
            
        }else if(totalCards == 21){
            cout << "YAY! You win!" << endl;
            userWantCard = 'n'; // exit nested while loop 
        }
        
        if ((userWantCard == 'n') || (userWantCard == 'N')){
            userWantCard = 'n';   // exit nested while loop option
        }
    }
    
    // exit do-while loop option
    cout << "Would you like to play again? (y/n)" << endl;
    cin >> userPlayAgain;
    
    //check for valid input for userPlayAgain
    while((userPlayAgain != 'y') && (userPlayAgain != 'Y') && (userPlayAgain != 'n') && (userPlayAgain != 'N')){
        cout << "OOPS! please give a valid entry of y or n: " << endl;
        cin >> userPlayAgain;
    }
    
    // grab random values for firstCards1st, firstCards2nd - ressample rand() values
    // so that we have true pseudo-random numbers, and not reusing 
    // initial random sample grabed prior to entering the do=while loop
    firstCards1st = 1 + rand() % 10;
    firstCards2nd = 1 + rand() % 10;
    
    
   }while((userPlayAgain == 'Y') || (userPlayAgain == 'y')); 
   
    
    cout << "Thank you for playing... Goodbye!" << endl;
   
    
    return 0;
}


